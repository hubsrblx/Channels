local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

--==[ НАСТРОЙКИ СТИЛЯ ]==--
local GUI_STYLE = {
    -- Основные настройки окон
    WINDOW = {
        BACKGROUND_COLOR = Color3.fromRGB(30, 30, 35),  -- Цвет фона окон
        BACKGROUND_TRANSPARENCY = 0.2,                  -- Прозрачность фона (0 - полностью непрозрачный, 1 - невидимый)
        CORNER_RADIUS = 12,                             -- Радиус закругления углов в пикселях
        BORDER_SIZE = 0                                 -- Толщина границы (0 - нет границы)
    },
    
    -- Стиль кнопки SHOOT
    SHOOT_BUTTON = {
        SIZE = UDim2.new(0, 60, 0, 60),                -- Размер кнопки (ширина, высота в пикселях)
        COLOR = Color3.fromRGB(180, 40, 40),           -- Основной цвет кнопки
        HOVER_COLOR = Color3.fromRGB(200, 50, 50),     -- Цвет кнопки при наведении
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),    -- Цвет текста
        TEXT_SIZE = 14,                                -- Размер текста
        FONT = Enum.Font.GothamBold,                   -- Шрифт текста
        CORNER_RADIUS = 30,                            -- Закругление углов (30 - полностью круглая кнопка)
        PRESSED_SIZE = UDim2.new(0, 55, 0, 55),       -- Размер кнопки при нажатии
        TEXT_OFFSET = UDim2.new(0, 0, 0, -2)         -- Смещение текста по вертикали
    },
    
    -- Стиль тогглов (Auto Get Gun и ESP)
    TOGGLE_BUTTON = {
        SIZE = UDim2.new(0.8, 0, 0, 30),               -- Размер кнопки (80% ширины окна, высота 30px)
        OFF_COLOR = Color3.fromRGB(60, 60, 60),        -- Цвет в выключенном состоянии
        ON_COLOR = Color3.fromRGB(80, 180, 80),        -- Цвет во включенном состоянии
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),    -- Цвет текста
        TEXT_SIZE = 12,                                -- Размер текста
        FONT = Enum.Font.Gotham,                       -- Шрифт текста
        CORNER_RADIUS = 8,                             -- Закругление углов
        HOVER_OFF_COLOR = Color3.fromRGB(80, 80, 80),  -- Цвет при наведении (выкл)
        HOVER_ON_COLOR = Color3.fromRGB(100, 200, 100) -- Цвет при наведении (вкл)
    },
    
    -- Стиль полосы перемещения
    DRAG_HANDLE = {
        HEIGHT = 6,                                    -- Высота полосы в пикселях
        MARGIN_TOP = 8,                                -- Отступ сверху от кнопки в пикселях
        COLOR = Color3.fromRGB(150, 150, 150),        -- Цвет полосы
        TRANSPARENCY = 0.5,                            -- Прозрачность полосы (0 - непрозрачная, 1 - невидимая)
        CORNER_RADIUS = 3                               -- Закругление углов полосы
    },
    
    -- Цвета статусов
    STATUS_COLORS = {
        SUCCESS = Color3.fromRGB(40, 180, 40),        -- Цвет при успешном выстреле
        ERROR = Color3.fromRGB(80, 80, 80),           -- Цвет при ошибке
        DEFAULT = Color3.fromRGB(180, 40, 40)         -- Стандартный цвет кнопки
    },
    
    -- Позиционирование окон
    WINDOW_POSITION = {
        MAIN_OFFSET = 10,                             -- Отступ от краев экрана в пикселях
        TOOLS_OFFSET = 10                             -- Отступ для окна инструментов
    }
}

--==[ НАСТРОЙКИ ФУНКЦИОНАЛА ]==--
local AUTO_GET_GUN = {
    COLLECT_DISTANCE = 5000,  -- Максимальная дистанция поиска оружия
    TELEPORT_HEIGHT = 2,      -- Высота телепортации над оружием
    CHECK_INTERVAL = 0.5      -- Интервал проверки оружия в секундах
}

local SHOOT_SETTINGS = {
    BULLET_SPEED = 300,       -- Скорость пули для расчета упреждения
    COOLDOWN = 1,             -- Время перезарядки в секундах
    LEAD_MULTIPLIER = 1.2     -- Множитель упреждения
}

local ESP_SETTINGS = {
    COLORS = {
        MURDERER = Color3.fromRGB(255, 0, 0),    -- Цвет убийцы
        SHERIFF = Color3.fromRGB(0, 0, 255),     -- Цвет шерифа
        HERO = Color3.fromRGB(255, 250, 0),      -- Цвет героя
        INNOCENT = Color3.fromRGB(0, 255, 0)     -- Цвет невиновного
    },
    UPDATE_INTERVAL = 0.2     -- Интервал обновления ESP в секундах
}

--==[ СОЗДАНИЕ GUI ]==--
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MobileMurderTerminator"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Основное окно (правый верхний угол с отступом)
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 80, 0, 80)
MainFrame.Position = UDim2.new(
    1, -80 - GUI_STYLE.WINDOW_POSITION.MAIN_OFFSET,  -- Правый край с отступом
    0, GUI_STYLE.WINDOW_POSITION.MAIN_OFFSET         -- Верхний край с отступом
)
MainFrame.BackgroundTransparency = 1  -- Полностью прозрачный фон окна
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Кнопка SHOOT (круглая без фона)
local ShootButton = Instance.new("TextButton")
ShootButton.Name = "ShootButton"
ShootButton.Text = "SHOOT"
ShootButton.Size = GUI_STYLE.SHOOT_BUTTON.SIZE
ShootButton.Position = UDim2.new(0.5, -GUI_STYLE.SHOOT_BUTTON.SIZE.X.Offset/2, 0, 0) -- Центрирование по горизонтали
ShootButton.AnchorPoint = Vector2.new(0.5, 0) -- Центрирование относительно позиции
ShootButton.BackgroundColor3 = GUI_STYLE.SHOOT_BUTTON.COLOR
ShootButton.TextColor3 = GUI_STYLE.SHOOT_BUTTON.TEXT_COLOR
ShootButton.Font = GUI_STYLE.SHOOT_BUTTON.FONT
ShootButton.TextSize = GUI_STYLE.SHOOT_BUTTON.TEXT_SIZE
ShootButton.TextYAlignment = Enum.TextYAlignment.Center -- Выравнивание текста по центру
ShootButton.TextTransparency = 0.1 -- Легкая прозрачность текста
ShootButton.TextPosition = GUI_STYLE.SHOOT_BUTTON.TEXT_OFFSET -- Смещение текста
ShootButton.AutoButtonColor = false
ShootButton.Parent = MainFrame

-- Сделаем кнопку круглой
local ShootButtonCorner = Instance.new("UICorner")
ShootButtonCorner.CornerRadius = UDim.new(1, 0) -- Полностью круглые углы
ShootButtonCorner.Parent = ShootButton

-- Полоса для перемещения (полупрозрачная)
local DragHandle = Instance.new("Frame")
DragHandle.Name = "DragHandle"
DragHandle.Size = UDim2.new(1, 0, 0, GUI_STYLE.DRAG_HANDLE.HEIGHT) -- На всю ширину окна
DragHandle.Position = UDim2.new(
    0, 0, 
    0, GUI_STYLE.SHOOT_BUTTON.SIZE.Y.Offset + GUI_STYLE.DRAG_HANDLE.MARGIN_TOP
)
DragHandle.BackgroundColor3 = GUI_STYLE.DRAG_HANDLE.COLOR
DragHandle.BackgroundTransparency = GUI_STYLE.DRAG_HANDLE.TRANSPARENCY
DragHandle.BorderSizePixel = 0
DragHandle.Parent = MainFrame

-- Закругление полосы перемещения
local DragHandleCorner = Instance.new("UICorner")
DragHandleCorner.CornerRadius = UDim.new(0, GUI_STYLE.DRAG_HANDLE.CORNER_RADIUS)
DragHandleCorner.Parent = DragHandle

-- Окно инструментов (левая сторона с отступом)
local ToolsFrame = Instance.new("Frame")
ToolsFrame.Name = "ToolsFrame"
ToolsFrame.Size = UDim2.new(0, 120, 0, 100)
ToolsFrame.Position = UDim2.new(
    0, GUI_STYLE.WINDOW_POSITION.TOOLS_OFFSET, 
    0, GUI_STYLE.WINDOW_POSITION.TOOLS_OFFSET
)
ToolsFrame.BackgroundColor3 = GUI_STYLE.WINDOW.BACKGROUND_COLOR
ToolsFrame.BackgroundTransparency = GUI_STYLE.WINDOW.BACKGROUND_TRANSPARENCY
ToolsFrame.BorderSizePixel = GUI_STYLE.WINDOW.BORDER_SIZE
ToolsFrame.Parent = ScreenGui

local ToolsFrameCorner = Instance.new("UICorner")
ToolsFrameCorner.CornerRadius = UDim.new(0, GUI_STYLE.WINDOW.CORNER_RADIUS)
ToolsFrameCorner.Parent = ToolsFrame

-- Кнопка Auto Get Gun
local Toggle = Instance.new("TextButton")
Toggle.Name = "AutoGetGunToggle"
Toggle.Text = "Auto Get Gun [OFF]"
Toggle.Size = GUI_STYLE.TOGGLE_BUTTON.SIZE
Toggle.Position = UDim2.new(0.1, 0, 0, 10)
Toggle.BackgroundColor3 = GUI_STYLE.TOGGLE_BUTTON.OFF_COLOR
Toggle.TextColor3 = GUI_STYLE.TOGGLE_BUTTON.TEXT_COLOR
Toggle.Font = GUI_STYLE.TOGGLE_BUTTON.FONT
Toggle.TextSize = GUI_STYLE.TOGGLE_BUTTON.TEXT_SIZE
Toggle.Parent = ToolsFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, GUI_STYLE.TOGGLE_BUTTON.CORNER_RADIUS)
ToggleCorner.Parent = Toggle

-- Кнопка ESP
local EspToggle = Instance.new("TextButton")
EspToggle.Name = "EspToggle"
EspToggle.Text = "ESP [OFF]"
EspToggle.Size = GUI_STYLE.TOGGLE_BUTTON.SIZE
EspToggle.Position = UDim2.new(0.1, 0, 0, 50)
EspToggle.BackgroundColor3 = GUI_STYLE.TOGGLE_BUTTON.OFF_COLOR
EspToggle.TextColor3 = GUI_STYLE.TOGGLE_BUTTON.TEXT_COLOR
EspToggle.Font = GUI_STYLE.TOGGLE_BUTTON.FONT
EspToggle.TextSize = GUI_STYLE.TOGGLE_BUTTON.TEXT_SIZE
EspToggle.Parent = ToolsFrame

local EspToggleCorner = Instance.new("UICorner")
EspToggleCorner.CornerRadius = UDim.new(0, GUI_STYLE.TOGGLE_BUTTON.CORNER_RADIUS)
EspToggleCorner.Parent = EspToggle

-- Полоса для перемещения окна инструментов
local ToolsDragHandle = Instance.new("Frame")
ToolsDragHandle.Name = "DragHandle"
ToolsDragHandle.Size = UDim2.new(1, 0, 0, GUI_STYLE.DRAG_HANDLE.HEIGHT)
ToolsDragHandle.Position = UDim2.new(0, 0, 0, 90)
ToolsDragHandle.BackgroundColor3 = GUI_STYLE.DRAG_HANDLE.COLOR
ToolsDragHandle.BackgroundTransparency = GUI_STYLE.DRAG_HANDLE.TRANSPARENCY
ToolsDragHandle.BorderSizePixel = 0
ToolsDragHandle.Parent = ToolsFrame

local ToolsDragHandleCorner = Instance.new("UICorner")
ToolsDragHandleCorner.CornerRadius = UDim.new(0, GUI_STYLE.DRAG_HANDLE.CORNER_RADIUS)
ToolsDragHandleCorner.Parent = ToolsDragHandle

--==[ СИСТЕМА ПЕРЕМЕЩЕНИЯ ]==--
local function setupDragging(frame, dragHandle)
    local dragging = false
    local dragInput, dragStart, startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, 
            math.clamp(startPos.X.Offset + delta.X, 0, ScreenGui.AbsoluteSize.X - frame.AbsoluteSize.X),
            startPos.Y.Scale, 
            math.clamp(startPos.Y.Offset + delta.Y, 0, ScreenGui.AbsoluteSize.Y - frame.AbsoluteSize.Y)
        )
    end
    
    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            -- Подсветка при перемещении
            if frame:FindFirstChildOfClass("TextButton") then
                TweenService:Create(frame:FindFirstChildOfClass("TextButton"), TweenInfo.new(0.1), {BackgroundTransparency = 0.1}):Play()
            end
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    if frame:FindFirstChildOfClass("TextButton") then
                        TweenService:Create(frame:FindFirstChildOfClass("TextButton"), TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
                    end
                end
            end)
        end
    end)
    
    dragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

setupDragging(MainFrame, DragHandle)
setupDragging(ToolsFrame, ToolsDragHandle)

--==[ ЭФФЕКТЫ КНОПОК ]==--
-- Эффекты для кнопки SHOOT
ShootButton.MouseEnter:Connect(function()
    TweenService:Create(ShootButton, TweenInfo.new(0.1), {
        BackgroundColor3 = GUI_STYLE.SHOOT_BUTTON.HOVER_COLOR,
        TextTransparency = 0
    }):Play()
end)

ShootButton.MouseLeave:Connect(function()
    TweenService:Create(ShootButton, TweenInfo.new(0.1), {
        BackgroundColor3 = GUI_STYLE.SHOOT_BUTTON.COLOR,
        TextTransparency = 0.1
    }):Play()
end)

-- Функция для эффектов тогглов
local function setupToggleHover(toggle, isOn)
    toggle.MouseEnter:Connect(function()
        local hoverColor = isOn and GUI_STYLE.TOGGLE_BUTTON.HOVER_ON_COLOR or GUI_STYLE.TOGGLE_BUTTON.HOVER_OFF_COLOR
        TweenService:Create(toggle, TweenInfo.new(0.1), {BackgroundColor3 = hoverColor}):Play()
    end)
    
    toggle.MouseLeave:Connect(function()
        local normalColor = isOn and GUI_STYLE.TOGGLE_BUTTON.ON_COLOR or GUI_STYLE.TOGGLE_BUTTON.OFF_COLOR
        TweenService:Create(toggle, TweenInfo.new(0.1), {BackgroundColor3 = normalColor}):Play()
    end)
end

-- Обновление внешнего вида тоггла
local function updateToggleAppearance(toggle, isOn)
    local color = isOn and GUI_STYLE.TOGGLE_BUTTON.ON_COLOR or GUI_STYLE.TOGGLE_BUTTON.OFF_COLOR
    TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
    setupToggleHover(toggle, isOn)
end

--==[ СИСТЕМА АВТОПОДБОРА ОРУЖИЯ ]==--
local AutoGetGun = { Enabled = false }

local function isMurderer()
    local char = LocalPlayer.Character
    if not char then return false end
    for _, tool in ipairs(char:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == "Knife" then
            return true
        end
    end
    return false
end

local function getNearestGun()
    local char = LocalPlayer.Character
    if not char then return nil end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return nil end

    local closestGun, closestDist = nil, AUTO_GET_GUN.COLLECT_DISTANCE
    for _, item in ipairs(Workspace:GetDescendants()) do
        if item.Name == "GunDrop" then
            local success, pos = pcall(function() return item:GetPivot().Position end)
            if success then
                local dist = (root.Position - pos).Magnitude
                if dist < closestDist then
                    closestGun, closestDist = item, dist
                end
            end
        end
    end
    return closestGun
end

local function teleportToGunAndBack()
    if isMurderer() then return end
    local char = LocalPlayer.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end
    local gun = getNearestGun()
    if not gun then return end

    local originalCFrame = root.CFrame
    root.CFrame = CFrame.new(gun:GetPivot().Position + Vector3.new(0, AUTO_GET_GUN.TELEPORT_HEIGHT, 0))

    local timeout = tick() + 2
    while gun:IsDescendantOf(Workspace) and tick() < timeout do
        task.wait(0.1)
    end

    root.CFrame = originalCFrame
end

local function autoGetGunLoop()
    while AutoGetGun.Enabled do
        teleportToGunAndBack()
        task.wait(AUTO_GET_GUN.CHECK_INTERVAL)
    end
end

--==[ СИСТЕМА ESP ]==--
local ESPEnabled = false
local Murder, Sheriff, Hero
local roles = {}

local function IsAlive(Player)
    for i, v in pairs(roles) do
        if Player.Name == i then
            return not v.Killed and not v.Dead
        end
    end
    return false
end

local function CreateHighlight()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and not v.Character:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.Parent = v.Character
            highlight.Enabled = ESPEnabled
        end
    end
end

local function UpdateHighlights()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Highlight") then
            local Highlight = v.Character:FindFirstChild("Highlight")
            Highlight.Enabled = ESPEnabled
            
            if ESPEnabled then
                if v.Name == Murder and IsAlive(v) then
                    Highlight.FillColor = ESP_SETTINGS.COLORS.MURDERER
                elseif v.Name == Sheriff and IsAlive(v) then
                    Highlight.FillColor = ESP_SETTINGS.COLORS.SHERIFF
                elseif v.Name == Hero and IsAlive(v) and (Sheriff == nil or not IsAlive(Players[Sheriff])) then
                    Highlight.FillColor = ESP_SETTINGS.COLORS.HERO
                else
                    Highlight.FillColor = ESP_SETTINGS.COLORS.INNOCENT
                end
            end
        end
    end
end

--==[ СИСТЕМА СТРЕЛЬБЫ ]==--
local function shootAtMurderer()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local backpack = LocalPlayer:WaitForChild("Backpack")
    local gun = backpack:FindFirstChild("Gun") or char:FindFirstChild("Gun")

    if not gun then
        return "NO_GUN"
    end

    char:WaitForChild("Humanoid"):EquipTool(gun)
    task.wait(0.2)

    -- Поиск убийцы
    local murderer = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local knife = player.Character:FindFirstChild("Knife") or player.Backpack:FindFirstChild("Knife")
            if knife then
                murderer = player
                break
            end
        end
    end

    if not (murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart")) then
        return "NO_TARGET"
    end

    -- Расчет упреждения
    local targetChar = murderer.Character
    local targetPos = targetChar.HumanoidRootPart.Position
    local targetVel = targetChar.HumanoidRootPart.Velocity

    local distance = (targetPos - char.HumanoidRootPart.Position).Magnitude
    local leadPos = targetPos + (targetVel * (distance / SHOOT_SETTINGS.BULLET_SPEED * SHOOT_SETTINGS.LEAD_MULTIPLIER))

    -- Выстрел
    local success, err = pcall(function()
        local gunRemote = workspace:WaitForChild(LocalPlayer.Name):WaitForChild("Gun")
            :WaitForChild("KnifeLocal"):WaitForChild("CreateBeam"):WaitForChild("RemoteFunction")
        gunRemote:InvokeServer(1, leadPos, "AH2")
    end)

    return success and "SUCCESS" or "FAILED"
end

--==[ ОБНОВЛЕНИЕ РОЛЕЙ ]==--
local function updateRoles()
    local success, result = pcall(function()
        return ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    
    if success then
        roles = result
        for i, v in pairs(roles) do
            if v.Role == "Murderer" then
                Murder = i
            elseif v.Role == 'Sheriff' then
                Sheriff = i
            elseif v.Role == 'Hero' then
                Hero = i
            end
        end
    end
end

--==[ ОСНОВНЫЕ ЦИКЛЫ ]==--
RunService.RenderStepped:Connect(function()
    updateRoles()
    
    if ESPEnabled then
        CreateHighlight()
        UpdateHighlights()
    end
end)

--==[ ОБРАБОТЧИКИ КНОПОК ]==--
-- Auto Get Gun Toggle
Toggle.MouseButton1Click:Connect(function()
    AutoGetGun.Enabled = not AutoGetGun.Enabled
    Toggle.Text = AutoGetGun.Enabled and "Auto Get Gun [ON]" or "Auto Get Gun [OFF]"
    updateToggleAppearance(Toggle, AutoGetGun.Enabled)
    
    if AutoGetGun.Enabled then
        task.spawn(autoGetGunLoop)
    end
end)

-- ESP Toggle
EspToggle.MouseButton1Click:Connect(function()
    ESPEnabled = not ESPEnabled
    EspToggle.Text = ESPEnabled and "ESP [ON]" or "ESP [OFF]"
    updateToggleAppearance(EspToggle, ESPEnabled)
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if highlight then
                highlight.Enabled = ESPEnabled
            end
        end
    end
end)

-- Shoot Button
ShootButton.MouseButton1Click:Connect(function()
    -- Анимация нажатия
    TweenService:Create(ShootButton, TweenInfo.new(0.1), {
        Size = GUI_STYLE.SHOOT_BUTTON.PRESSED_SIZE,
        TextTransparency = 0.3
    }):Play()
    
    task.wait(0.1)
    
    TweenService:Create(ShootButton, TweenInfo.new(0.1), {
        Size = GUI_STYLE.SHOOT_BUTTON.SIZE,
        TextTransparency = 0
    }):Play()

    -- Выстрел и обработка результата
